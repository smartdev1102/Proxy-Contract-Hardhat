{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xFa9351955c3821F002295ce4415DF4a430245ae6",
    "txHash": "0xa1dd1f93043b4ffe8ce1bdb5d4b886250017e56f9c4fc2654ccb5d329aa37186"
  },
  "proxies": [
    {
      "address": "0xf9aE95a771585fbE3a60F9dD282ef0Cf5515A1a0",
      "txHash": "0xa3cbd44fb09b0935d30e79ac444453725acd9409d638da290f417bdc6dc8de5e",
      "kind": "transparent"
    },
    {
      "address": "0x5830d2b5a60Ff7D3750dC1417a109CE0C2ed8564",
      "txHash": "0x3352ab14bc852952f22411691b03df70a9fab6f4b288e1a490f40761f4f02e50",
      "kind": "transparent"
    },
    {
      "address": "0xB3aE5A251D2940fD35E39CEE44c954248fBFD3b4",
      "txHash": "0x36d3c54417c9d91d43a5f1ffb52bacf1dabdc2bd51e81d6f448765c40de0e285",
      "kind": "transparent"
    },
    {
      "address": "0x03E3A40677bF42BC0ED6B0Cf80Db7438D5cD4BE5",
      "txHash": "0x43661d87fe8bb959099774c100cb06e7686355ed1bbe146c6ba33d171ff8cc43",
      "kind": "transparent"
    },
    {
      "address": "0x8EA77812Ab61a5c045ba1BEe9db2f4c20D6a7d96",
      "txHash": "0x711faabb8e971d1d64705befdd2d8e553bc4d10e548a8a6f357b354896c505e6",
      "kind": "transparent"
    },
    {
      "address": "0xFdf8a692072FAdcfC417b8482De65934F77a2f15",
      "txHash": "0x9d68f69b89d667d49b19e463deb8f82028849d836f3dfe7b9499ae469019ef2f",
      "kind": "transparent"
    }
  ],
  "impls": {
    "7825eb3c972ba56cd79675e248cdf9b73b6d1ecf8e4e4f8e0175b1e8a503bf51": {
      "address": "0xca9Cf4B723C78b1821B5A0b0a0f123b40aFcCa31",
      "txHash": "0xf3343616426393b859b1bf045dd93d46206bcc48ed48fc9d115d912983456630",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "label": "_tokenCount",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "NIFTYSouq721",
            "src": "contracts\\NIFTYSouq721.sol:8"
          },
          {
            "label": "Owner",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "NIFTYSouq721",
            "src": "contracts\\NIFTYSouq721.sol:9"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "NIFTYSouq721",
            "src": "contracts\\NIFTYSouq721.sol:10"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          }
        }
      }
    },
    "e93c3b3f15c56cc9d8076004edf639a67411a4c99e98c249bb251dbab6335d45": {
      "address": "0xD49B62042a1DB6c57B7C4F25ff92A586229174E6",
      "txHash": "0xd45bfc9c3bbfa985de036acc3d2f3632bb109a12438910b2c613530c767533f0",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "isInitialize",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "NIFTYSouq721",
            "src": "contracts\\NIFTYSouq721.sol:11"
          },
          {
            "label": "tokenIds",
            "offset": 0,
            "slot": "202",
            "type": "t_uint256",
            "contract": "NIFTYSouq721",
            "src": "contracts\\NIFTYSouq721.sol:12"
          },
          {
            "label": "marketplaceFee",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "NIFTYSouq721",
            "src": "contracts\\NIFTYSouq721.sol:13"
          },
          {
            "label": "contractOwner",
            "offset": 0,
            "slot": "204",
            "type": "t_address_payable",
            "contract": "NIFTYSouq721",
            "src": "contracts\\NIFTYSouq721.sol:14"
          },
          {
            "label": "nftPrices",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "NIFTYSouq721",
            "src": "contracts\\NIFTYSouq721.sol:17"
          },
          {
            "label": "tokenURIs",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "NIFTYSouq721",
            "src": "contracts\\NIFTYSouq721.sol:18"
          },
          {
            "label": "nftListed",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "NIFTYSouq721",
            "src": "contracts\\NIFTYSouq721.sol:19"
          },
          {
            "label": "nftArtist",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "NIFTYSouq721",
            "src": "contracts\\NIFTYSouq721.sol:20"
          },
          {
            "label": "multiArtists",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_uint256,t_array(t_string_storage)dyn_storage)",
            "contract": "NIFTYSouq721",
            "src": "contracts\\NIFTYSouq721.sol:21"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_uint256,t_array(t_string_storage)dyn_storage)": {
            "label": "mapping(uint256 => string[])"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          }
        }
      }
    },
    "a88a7a6a3dd6ae92959d661ed9a3727b51de921f2aa1395a76796ce40010499e": {
      "address": "0xf5D0Afdb4772E0003CD33643a815Fe11ee1e1797",
      "txHash": "0xb7061033fb1d1b62e65b3ab0b50e9c2e8aa5b7985f94824069526742805b0d6f",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "201",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\draft-EIP712Upgradeable.sol:30"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "202",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\draft-EIP712Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\draft-EIP712Upgradeable.sol:118"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "254",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "label": "isInitialize",
            "offset": 0,
            "slot": "303",
            "type": "t_bool",
            "contract": "NIFTYSouq721",
            "src": "contracts\\NIFTYSouq721.sol:22"
          },
          {
            "label": "tokenIds",
            "offset": 0,
            "slot": "304",
            "type": "t_uint256",
            "contract": "NIFTYSouq721",
            "src": "contracts\\NIFTYSouq721.sol:23"
          },
          {
            "label": "marketplaceFee",
            "offset": 0,
            "slot": "305",
            "type": "t_uint256",
            "contract": "NIFTYSouq721",
            "src": "contracts\\NIFTYSouq721.sol:24"
          },
          {
            "label": "contractOwner",
            "offset": 0,
            "slot": "306",
            "type": "t_address_payable",
            "contract": "NIFTYSouq721",
            "src": "contracts\\NIFTYSouq721.sol:25"
          },
          {
            "label": "nftLists",
            "offset": 0,
            "slot": "307",
            "type": "t_mapping(t_uint256,t_struct(nftData)3086_storage)",
            "contract": "NIFTYSouq721",
            "src": "contracts\\NIFTYSouq721.sol:28"
          },
          {
            "label": "auctionLists",
            "offset": 0,
            "slot": "308",
            "type": "t_mapping(t_uint256,t_struct(AuctionData)3105_storage)",
            "contract": "NIFTYSouq721",
            "src": "contracts\\NIFTYSouq721.sol:29"
          },
          {
            "label": "bidsLists",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_uint256,t_array(t_struct(Bids)3110_storage)dyn_storage)",
            "contract": "NIFTYSouq721",
            "src": "contracts\\NIFTYSouq721.sol:30"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Bids)3110_storage)dyn_storage": {
            "label": "struct NIFTYSouq721.Bids[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(Bids)3110_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct NIFTYSouq721.Bids[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(AuctionData)3105_storage)": {
            "label": "mapping(uint256 => struct NIFTYSouq721.AuctionData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(nftData)3086_storage)": {
            "label": "mapping(uint256 => struct NIFTYSouq721.nftData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AuctionData)3105_storage": {
            "label": "struct NIFTYSouq721.AuctionData",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "directBuyPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "minIncrement",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "maxBid",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "maxBidder",
                "type": "t_address",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(Bids)3110_storage": {
            "label": "struct NIFTYSouq721.Bids",
            "members": [
              {
                "label": "bidder",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(nftData)3086_storage": {
            "label": "struct NIFTYSouq721.nftData",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenURI",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "tokenPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tokenMinter",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "isListed",
                "type": "t_bool",
                "offset": 20,
                "slot": "3"
              },
              {
                "label": "royalArtists",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "profitArtists",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "isFirst",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "29b253f20f64ad6dcee058d9f69802e3e6a3828372624bc3f34625fa0915cd84": {
      "address": "0xd9718898e2c9a364D1eAEca0E1360237040FE643",
      "txHash": "0xeef31848951880e99fd7731db135a43aa31c738fb373db5c779d9c58390801ff",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "contracts\\farm.sol:22"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "contracts\\farm.sol:27"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "contracts\\farm.sol:79"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "contracts\\farm.sol:575"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "contracts\\farm.sol:629"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "contracts\\farm.sol:663"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "contracts\\farm.sol:693"
          },
          {
            "label": "oreo",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(IOREO)808",
            "contract": "MasterChef",
            "src": "contracts\\farm.sol:954"
          },
          {
            "label": "stake",
            "offset": 0,
            "slot": "152",
            "type": "t_contract(IStake)707",
            "contract": "MasterChef",
            "src": "contracts\\farm.sol:956"
          },
          {
            "label": "devAddr",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "MasterChef",
            "src": "contracts\\farm.sol:958"
          },
          {
            "label": "devBps",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "MasterChef",
            "src": "contracts\\farm.sol:959"
          },
          {
            "label": "oreoPerBlock",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "MasterChef",
            "src": "contracts\\farm.sol:961"
          },
          {
            "label": "bonusMultiplier",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "MasterChef",
            "src": "contracts\\farm.sol:963"
          },
          {
            "label": "pools",
            "offset": 0,
            "slot": "157",
            "type": "t_struct(List)833_storage",
            "contract": "MasterChef",
            "src": "contracts\\farm.sol:966"
          },
          {
            "label": "poolInfo",
            "offset": 0,
            "slot": "159",
            "type": "t_mapping(t_address,t_struct(PoolInfo)1769_storage)",
            "contract": "MasterChef",
            "src": "contracts\\farm.sol:968"
          },
          {
            "label": "userInfo",
            "offset": 0,
            "slot": "160",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UserInfo)1762_storage))",
            "contract": "MasterChef",
            "src": "contracts\\farm.sol:970"
          },
          {
            "label": "totalAllocPoint",
            "offset": 0,
            "slot": "161",
            "type": "t_uint256",
            "contract": "MasterChef",
            "src": "contracts\\farm.sol:972"
          },
          {
            "label": "startBlock",
            "offset": 0,
            "slot": "162",
            "type": "t_uint256",
            "contract": "MasterChef",
            "src": "contracts\\farm.sol:974"
          },
          {
            "label": "stakeTokenCallerAllowancePool",
            "offset": 0,
            "slot": "163",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MasterChef",
            "src": "contracts\\farm.sol:977"
          },
          {
            "label": "stakeTokenCallerContracts",
            "offset": 0,
            "slot": "164",
            "type": "t_mapping(t_address,t_struct(List)833_storage)",
            "contract": "MasterChef",
            "src": "contracts\\farm.sol:980"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IOREO)808": {
            "label": "contract IOREO",
            "numberOfBytes": "20"
          },
          "t_contract(IStake)707": {
            "label": "contract IStake",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(UserInfo)1762_storage))": {
            "label": "mapping(address => mapping(address => struct MasterChef.UserInfo))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(List)833_storage)": {
            "label": "mapping(address => struct LinkList.List)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(PoolInfo)1769_storage)": {
            "label": "mapping(address => struct MasterChef.PoolInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UserInfo)1762_storage)": {
            "label": "mapping(address => struct MasterChef.UserInfo)",
            "numberOfBytes": "32"
          },
          "t_struct(List)833_storage": {
            "label": "struct LinkList.List",
            "members": [
              {
                "label": "llSize",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "next",
                "type": "t_mapping(t_address,t_address)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PoolInfo)1769_storage": {
            "label": "struct MasterChef.PoolInfo",
            "members": [
              {
                "label": "allocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lastRewardBlock",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "accOreoPerShare",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(UserInfo)1762_storage": {
            "label": "struct MasterChef.UserInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "fundedBy",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "776233290abe9d3e0e7f7d31f88d92eb39d73573e2666c0fa2dee88769f1635f": {
      "address": "0x8EE8EeA33C9a43E8A2EF918263B6dd41644c7A18",
      "txHash": "0x13acf20c773fbb4938b9b5c93e68e0eee806e80d6b0fca2425c1c0f87c12b4e7",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "contracts\\farm-v2.sol:22"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "contracts\\farm-v2.sol:27"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "contracts\\farm-v2.sol:79"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "contracts\\farm-v2.sol:572"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "contracts\\farm-v2.sol:626"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "contracts\\farm-v2.sol:660"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "contracts\\farm-v2.sol:690"
          },
          {
            "label": "oreo",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(IOREO)807",
            "contract": "MasterChef",
            "src": "contracts\\farm-v2.sol:954"
          },
          {
            "label": "stake",
            "offset": 0,
            "slot": "152",
            "type": "t_contract(IStake)706",
            "contract": "MasterChef",
            "src": "contracts\\farm-v2.sol:956"
          },
          {
            "label": "devAddr",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "MasterChef",
            "src": "contracts\\farm-v2.sol:958"
          },
          {
            "label": "devBps",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "MasterChef",
            "src": "contracts\\farm-v2.sol:959"
          },
          {
            "label": "oreoPerBlock",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "MasterChef",
            "src": "contracts\\farm-v2.sol:961"
          },
          {
            "label": "bonusMultiplier",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "MasterChef",
            "src": "contracts\\farm-v2.sol:963"
          },
          {
            "label": "pools",
            "offset": 0,
            "slot": "157",
            "type": "t_struct(List)832_storage",
            "contract": "MasterChef",
            "src": "contracts\\farm-v2.sol:965"
          },
          {
            "label": "poolInfo",
            "offset": 0,
            "slot": "159",
            "type": "t_mapping(t_address,t_struct(PoolInfo)1767_storage)",
            "contract": "MasterChef",
            "src": "contracts\\farm-v2.sol:967"
          },
          {
            "label": "userInfo",
            "offset": 0,
            "slot": "160",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UserInfo)1760_storage))",
            "contract": "MasterChef",
            "src": "contracts\\farm-v2.sol:969"
          },
          {
            "label": "totalAllocPoint",
            "offset": 0,
            "slot": "161",
            "type": "t_uint256",
            "contract": "MasterChef",
            "src": "contracts\\farm-v2.sol:971"
          },
          {
            "label": "startBlock",
            "offset": 0,
            "slot": "162",
            "type": "t_uint256",
            "contract": "MasterChef",
            "src": "contracts\\farm-v2.sol:973"
          },
          {
            "label": "stakeTokenCallerAllowancePool",
            "offset": 0,
            "slot": "163",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MasterChef",
            "src": "contracts\\farm-v2.sol:976"
          },
          {
            "label": "stakeTokenCallerContracts",
            "offset": 0,
            "slot": "164",
            "type": "t_mapping(t_address,t_struct(List)832_storage)",
            "contract": "MasterChef",
            "src": "contracts\\farm-v2.sol:979"
          },
          {
            "label": "feeInfo",
            "offset": 0,
            "slot": "165",
            "type": "t_struct(FeeInfo)1772_storage",
            "contract": "MasterChef",
            "src": "contracts\\farm-v2.sol:982"
          },
          {
            "label": "marketAddress",
            "offset": 0,
            "slot": "167",
            "type": "t_address",
            "contract": "MasterChef",
            "src": "contracts\\farm-v2.sol:984"
          },
          {
            "label": "burnAddress",
            "offset": 0,
            "slot": "168",
            "type": "t_address",
            "contract": "MasterChef",
            "src": "contracts\\farm-v2.sol:986"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IOREO)807": {
            "label": "contract IOREO",
            "numberOfBytes": "20"
          },
          "t_contract(IStake)706": {
            "label": "contract IStake",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(UserInfo)1760_storage))": {
            "label": "mapping(address => mapping(address => struct MasterChef.UserInfo))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(List)832_storage)": {
            "label": "mapping(address => struct LinkList.List)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(PoolInfo)1767_storage)": {
            "label": "mapping(address => struct MasterChef.PoolInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UserInfo)1760_storage)": {
            "label": "mapping(address => struct MasterChef.UserInfo)",
            "numberOfBytes": "32"
          },
          "t_struct(FeeInfo)1772_storage": {
            "label": "struct MasterChef.FeeInfo",
            "members": [
              {
                "label": "marketFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "burnFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(List)832_storage": {
            "label": "struct LinkList.List",
            "members": [
              {
                "label": "llSize",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "next",
                "type": "t_mapping(t_address,t_address)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PoolInfo)1767_storage": {
            "label": "struct MasterChef.PoolInfo",
            "members": [
              {
                "label": "allocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lastRewardBlock",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "accOreoPerShare",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(UserInfo)1760_storage": {
            "label": "struct MasterChef.UserInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "fundedBy",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "927da9caa00cd8e51b3b223eccb8429f26556240248e3cd75432ad257c18680a": {
      "address": "0x2737Fe5ca3c1A112896144aEa5e485d920621573",
      "txHash": "0xf66fd02205b58fbc4054396910c40dc2e30f6b3d992f5053d781b5b935066e60",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "contracts\\MasterChef-V2.sol:22"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "contracts\\MasterChef-V2.sol:27"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "contracts\\MasterChef-V2.sol:79"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "contracts\\MasterChef-V2.sol:584"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "contracts\\MasterChef-V2.sol:638"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "contracts\\MasterChef-V2.sol:672"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "contracts\\MasterChef-V2.sol:702"
          },
          {
            "label": "oreo",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(IOREO)812",
            "contract": "MasterChef",
            "src": "contracts\\MasterChef-V2.sol:966"
          },
          {
            "label": "stake",
            "offset": 0,
            "slot": "152",
            "type": "t_contract(IStake)711",
            "contract": "MasterChef",
            "src": "contracts\\MasterChef-V2.sol:968"
          },
          {
            "label": "devAddr",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "MasterChef",
            "src": "contracts\\MasterChef-V2.sol:970"
          },
          {
            "label": "devBps",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "MasterChef",
            "src": "contracts\\MasterChef-V2.sol:971"
          },
          {
            "label": "oreoPerBlock",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "MasterChef",
            "src": "contracts\\MasterChef-V2.sol:973"
          },
          {
            "label": "bonusMultiplier",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "MasterChef",
            "src": "contracts\\MasterChef-V2.sol:975"
          },
          {
            "label": "pools",
            "offset": 0,
            "slot": "157",
            "type": "t_struct(List)878_storage",
            "contract": "MasterChef",
            "src": "contracts\\MasterChef-V2.sol:977"
          },
          {
            "label": "poolInfo",
            "offset": 0,
            "slot": "159",
            "type": "t_mapping(t_address,t_struct(PoolInfo)1813_storage)",
            "contract": "MasterChef",
            "src": "contracts\\MasterChef-V2.sol:979"
          },
          {
            "label": "userInfo",
            "offset": 0,
            "slot": "160",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UserInfo)1806_storage))",
            "contract": "MasterChef",
            "src": "contracts\\MasterChef-V2.sol:981"
          },
          {
            "label": "totalAllocPoint",
            "offset": 0,
            "slot": "161",
            "type": "t_uint256",
            "contract": "MasterChef",
            "src": "contracts\\MasterChef-V2.sol:983"
          },
          {
            "label": "startBlock",
            "offset": 0,
            "slot": "162",
            "type": "t_uint256",
            "contract": "MasterChef",
            "src": "contracts\\MasterChef-V2.sol:985"
          },
          {
            "label": "stakeTokenCallerAllowancePool",
            "offset": 0,
            "slot": "163",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MasterChef",
            "src": "contracts\\MasterChef-V2.sol:988"
          },
          {
            "label": "stakeTokenCallerContracts",
            "offset": 0,
            "slot": "164",
            "type": "t_mapping(t_address,t_struct(List)878_storage)",
            "contract": "MasterChef",
            "src": "contracts\\MasterChef-V2.sol:991"
          },
          {
            "label": "feeInfo",
            "offset": 0,
            "slot": "165",
            "type": "t_struct(FeeInfo)1818_storage",
            "contract": "MasterChef",
            "src": "contracts\\MasterChef-V2.sol:994"
          },
          {
            "label": "marketAddress",
            "offset": 0,
            "slot": "167",
            "type": "t_address",
            "contract": "MasterChef",
            "src": "contracts\\MasterChef-V2.sol:996"
          },
          {
            "label": "burnAddress",
            "offset": 0,
            "slot": "168",
            "type": "t_address",
            "contract": "MasterChef",
            "src": "contracts\\MasterChef-V2.sol:998"
          },
          {
            "label": "refAddr",
            "offset": 0,
            "slot": "169",
            "type": "t_address",
            "contract": "MasterChef",
            "src": "contracts\\MasterChef-V2.sol:1000"
          },
          {
            "label": "refBps",
            "offset": 0,
            "slot": "170",
            "type": "t_uint256",
            "contract": "MasterChef",
            "src": "contracts\\MasterChef-V2.sol:1001"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IOREO)812": {
            "label": "contract IOREO",
            "numberOfBytes": "20"
          },
          "t_contract(IStake)711": {
            "label": "contract IStake",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(UserInfo)1806_storage))": {
            "label": "mapping(address => mapping(address => struct MasterChef.UserInfo))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(List)878_storage)": {
            "label": "mapping(address => struct LinkList.List)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(PoolInfo)1813_storage)": {
            "label": "mapping(address => struct MasterChef.PoolInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UserInfo)1806_storage)": {
            "label": "mapping(address => struct MasterChef.UserInfo)",
            "numberOfBytes": "32"
          },
          "t_struct(FeeInfo)1818_storage": {
            "label": "struct MasterChef.FeeInfo",
            "members": [
              {
                "label": "marketFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "burnFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(List)878_storage": {
            "label": "struct LinkList.List",
            "members": [
              {
                "label": "llSize",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "next",
                "type": "t_mapping(t_address,t_address)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PoolInfo)1813_storage": {
            "label": "struct MasterChef.PoolInfo",
            "members": [
              {
                "label": "allocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lastRewardBlock",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "accOreoPerShare",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(UserInfo)1806_storage": {
            "label": "struct MasterChef.UserInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "fundedBy",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    }
  }
}
